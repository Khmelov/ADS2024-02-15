Создайте класс SourceScannerC с методом main,
который читает все файлы *.java из каталога src и его подкаталогов.

Каталог можно получить так:
        String src = System.getProperty("user.dir")
                       + File.separator + "src" + File.separator;

Файлы, содержащие в тексте @Test или org.junit.Test (тесты)
не участвуют в обработке.

В каждом тексте файла необходимо:
1. Удалить строку package и все импорты.
2. Удалить все комментарии за O(n) от длины текста.
3. Заменить все последовательности символов с кодом <33 на 32 (один пробел), т.е привести текст к строке.
4. Выполнить trim() для полученной строки.

В полученном наборе текстов:
1. Найти наиболее похожие тексты по метрике "расстояние Левенштейна",
   и определить копия ли это, считая копиями тексты с числом правок <10.
2. Если текст имеет копию(и), то вывести путь файла этого текста
   и в следующих строках путь(и) к копии(ям).
3. Повторить для всех файлов с копиями,
   при выводе сортировать файлы лексикографически по их пути.

Найдите способ корректно обрабатывать ошибки MalformedInputException

Оптимизируйте производительность решения (это может интересно).

Все операции не должны ничего менять на дисках (разрешено только чтение).
Работа не имеет цели найти плагиат, поэтому не нужно менять коды своих программ.
